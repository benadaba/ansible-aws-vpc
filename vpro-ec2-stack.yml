---
- name: Setup Vprofile Stack
  hosts: localhost
  connection: local
  gather_facts: no
  tasks:
    - name: Import VPC setup Variable
      include_vars: vars/vpc-output_vars

    - name: Import vprofile setup variable
      include_vars: vars/vprostacksetup

    - name: Create vprofile ec2 key
      ec2_key:
        name: vprokey
        region: "{{region}}"
      register: vprokey_out

    - name: Save private key into file loginkey_vpro.pem
      copy:
        content: "{{vprokey_out.key.private_key}}"
        dest: "./loginkey_vpro.pem"
        mode: 0400
      when: vprokey_out.changed

    - name: Create security group for load balancer
      ec2_group:
        name: vproELB-sg
        description: Allow port 80 from everywhere and all port within sg
        region: "{{region}}"
        vpc_id: "{{vpcid}}"
        rules:
          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip: 0.0.0.0/0
      register: vproELBSG_out

    - name: Create Security Group for Vprofile stack
      ec2_group:
        name: vproStack-sg
        description: Allow port 22 from everywhere and all port within sg
        region: "{{region}}"
        vpc_id: "{{vpcid}}"
        purge_rules: no
        rules:
          - proto: tcp
            from_port: 80
            to_port: 80
            group_id: "{{vproELBSG_out.group_id}}"

          - proto: tcp
            from_port: 80
            to_port: 80
            group_id: "{{BastionSGid}}"
      register: vproStackSG_out

    - name: Update Security Group with its own sg id
      ec2_group:
        name: vproStack-sg
        description: Allow port 22 from everywhere  and all port within sg
        region: "{{region}}"
        vpc_id: "{{vpcid}}"
        purge_rules: no
        rules:
          - proto: all
            group_id: "{{vproStackSG_out.group_id}}"

    - name: Creating Nginx web01
      ec2:
        key_name: ubuntukey
        region: "{{region}}"
        instance_type: t2.micro
        image: "{{nginx_ami}}"
        wait: yes
        wait_timeout: 300
        instance_tags:
          Name: "vpro_ansible_web01"
          Project: vprofile
          Owner: Devops Team
        exact_count: 1
        count_tag:
          Name: "vpro_ansible_web01"
          Project: vprofile
          Owner: Devops Team
        group_id: "{{vproStackSG_out.group_id}}"
        vpc_subnet_id: "{{privsub1id}}"
      register: web01_out


    - name: Creating Tomcat app01
      ec2:
        key_name: ubuntukey
        region: "{{region}}"
        instance_type: t2.micro
        image: "{{tomcat_ami}}"
        wait: yes
        wait_timeout: 300
        instance_tags:
          Name: "vpro_ansible_app01"
          Project: vprofile
          Owner: DevOps Team
        exact_count: 1
        count_tag:
          Name: "vpro_ansible_app01"
          Project: vprofile
          Owner: DevOps Team
        group_id: "{{vproStackSG_out.group_id}}"
        vpc_subnet_id: "{{privsub1id}}"
      register: app01_out


    - name: Creating memcached mc01
      ec2:
        key_name: ubuntukey
        region: "{{region}}"
        instance_type: t2.micro
        image: "{{memcach_ami}}"
        wait: yes
        wait_timeout: 300
        instance_tags:
          Name: "vpro_ansible_mc01"
          Project: vprofile
          Owner: DevOps Team
        exact_count: 1
        count_tag:
          Name: "vpro_ansible_mc01"
          Project: vprofile
          Owner: DevOps Team
        group_id: "{{vproStackSG_out.group_id}}"
        vpc_subnet_id: "{{privsub1id}}"
      register: mc01_out


    - name: Creating RabbitMQ rmq01
      ec2:
        key_name: ubuntukey
        region: "{{region}}"
        instance_type: t2.micro
        image: "{{rmq_ami}}"
        wait: yes
        wait_timeout: 300
        instance_tags:
          Name: "vpro_ansible_rmq01"
          Project: vprofile
          Owner: DevOps Team
        exact_count: 1
        count_tag:
          Name: "vpro_ansible_rmq01"
          Project: vprofile
          Owner: DevOps Team
        group_id: "{{vproStackSG_out.group_id}}"
        vpc_subnet_id: "{{privsub1id}}"
      register: rmq01_out


    - name: Creating MySql db01
      ec2:
        key_name: ubuntukey
        region: "{{region}}"
        instance_type: t2.micro
        image: "{{mysql_ami}}"
        wait: yes
        wait_timeout: 300
        instance_tags:
          Name: "vpro_ansible_rdb01"
          Project: vprofile
          Owner: DevOps Team
        exact_count: 1
        count_tag:
          Name: "vpro_ansible_db01"
          Project: vprofile
          Owner: DevOps Team
        group_id: "{{vproStackSG_out.group_id}}"
        vpc_subnet_id: "{{privsub1id}}"
      register: db01_out

    - debug:
        var: db01_out
